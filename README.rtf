{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Arial-BoldMT;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\paperw11900\paperh16840\margl1440\margr1440\vieww22720\viewh11580\viewkind0
\deftab720
\pard\tx5953\pardeftab720\sl360\slmult1\partightenfactor0

\f0\b\fs28 \cf2 \expnd0\expndtw0\kerning0
Introduction:
\f1\b0  The provided Python script aims to detect and analyze specific HSV color ranges within images, visualizing and highlight the color coverage and output the percentage coverage. The algorithm uses the OpenCV and Matplotlib libraries for image processing and visualization.\
\

\f0\b Algorithm Overview:
\f1\b0 \
\pard\tx220\tx720\tx5953\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls1\ilvl0
\f0\b \cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Image Loading:
\f1\b0  The script reads an image file specified by the user using OpenCV's cv.imread function.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}
\f0\b \expnd0\expndtw0\kerning0
Color Space Conversion:
\f1\b0  The image is converted from the default RGB color space to the HSV (Hue, Saturation, Value) color space using cv.cvtColor.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}
\f0\b \expnd0\expndtw0\kerning0
Color Range Definition:
\f1\b0  The user specifies a color range in HSV format, defining the lower and upper bounds for hue, saturation, and value.
\f0\b \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
Mask Creation:
\f1\b0  A binary mask is created using cv.inRange, isolating pixels within the specified color range.
\f0\b \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
Color Region Extraction
\f1\b0 : The color region is obtained by applying a bitwise AND operation between the original image and the mask, using cv.bitwise_and.
\f0\b \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6.	}\expnd0\expndtw0\kerning0
Highlighted Image Creation:
\f1\b0  The script generates a highlighted image by combining the original image and the color region using cv.addWeighted.
\f0\b \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7.	}\expnd0\expndtw0\kerning0
Coverage Percentage Calculation:
\f1\b0  The percentage coverage of the specified color range is calculated by comparing the number of colored pixels to the total number of pixels in the image.
\f0\b \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Visualization and Saving:
\f1\b0  Matplotlib is used to create a subplot displaying the original image, mask image, colored mask, and highlighted image \'96 final result. The plot is saved as a PNG file with the percentage coverage at the bottom.\
\pard\tx5953\pardeftab720\sl360\slmult1\partightenfactor0
\cf2 \'a0\

\f0\b Usage:\
\pard\tx220\tx720\tx5953\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls2\ilvl0
\f1\b0 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Users can input the path to the image (img_path) and define the desired color range (color_range) in HSV format.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The script processes the image, creates visualizations, and saves the results in the "results" directory.\
\pard\tx720\tx5953\pardeftab720\sl360\slmult1\partightenfactor0
\cf2 \
\pard\tx5953\pardeftab720\sl360\slmult1\partightenfactor0

\f0\b \cf2 Visualizations:\
\pard\tx220\tx720\tx5953\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls3\ilvl0
\f1\b0 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
The script generates a subplot with four images: the original image, the mask image, the colored mask, and the highlighted image.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
 The percentage coverage of the specified color range is displayed at the bottom.\
\pard\tx720\tx5953\pardeftab720\sl360\slmult1\partightenfactor0
\cf2 \
\pard\tx5953\pardeftab720\sl360\slmult1\partightenfactor0

\f0\b \cf2 Adjustments:\
\pard\tx220\tx720\tx5953\pardeftab720\li720\fi-720\sl360\slmult1\partightenfactor0
\ls4\ilvl0
\f1\b0 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Users can modify the color range parameters and image path for different color detection scenarios.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Adjustments to the figure size, spacing between subplots, and other visual parameters can be made to suit specific preferences.\
}